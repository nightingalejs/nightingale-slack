{"version":3,"sources":["../src/index.js"],"names":["SlackHandler","levelToSlackColor","TRACE","DEBUG","INFO","WARN","ERROR","CRITICAL","FATAL","EMERGENCY","createHandler","slackConfig","record","markdown","raw","body","channel","username","icon_url","iconUrl","icon_emoji","iconEmoji","attachments","fallback","title","message","color","level","text","mrkdwn_in","url","webhookUrl","json","on","err2","console","error","stack","SlackConfigType","minLevel","handle"],"mappings":";;;;;kBAiDwBA,Y;;;;;;AAhDxB;;;;AACA;;;;AACA;;AACA;;;;;;AAJA;AAMA,MAAMC,oBAAoB;AACxB,GAAC,4BAAOC,KAAR,GAAgB,SADQ;AAExB,GAAC,4BAAOC,KAAR,GAAgB,SAFQ;AAGxB,GAAC,4BAAOC,IAAR,GAAe,SAHS;AAIxB,GAAC,4BAAOC,IAAR,GAAe,SAJS;AAKxB,GAAC,4BAAOC,KAAR,GAAgB,QALQ;AAMxB,GAAC,4BAAOC,QAAR,GAAmB,QANK;AAOxB,GAAC,4BAAOC,KAAR,GAAgB,QAPQ;AAQxB,GAAC,4BAAOC,SAAR,GAAoB;AARI,CAA1B;;AAWA,MAAMC,gBAAiBC,WAAD,IAAiBC,UAAU;AAC/C,QAAMC,WAAW,4CAAkBD,MAAlB,CAAjB;AACA,QAAME,MAAM,uCAAaF,MAAb,CAAZ;;AAEA,QAAMG,OAAO;AACXC,aAASL,YAAYK,OADV;AAEXC,cAAUN,YAAYM,QAFX;AAGXC,cAAUP,YAAYQ,OAHX;AAIXC,gBAAYT,YAAYU,SAJb;AAKXC,iBAAa,CACX;AACEC,gBAAUT,GADZ;AAEEU,aAAOZ,OAAOa,OAFhB;AAGEC,aAAOzB,kBAAkBW,OAAOe,KAAzB,CAHT;AAIEC,YAAMf,QAJR;AAKEgB,iBAAW,CAAC,MAAD;AALb,KADW;AALF,GAAb;;AAgBA,qBAAK,EAAEC,KAAKnB,YAAYoB,UAAnB,EAA+BhB,MAAMA,IAArC,EAA2CiB,MAAM,IAAjD,EAAL,EACGC,EADH,CACM,OADN,EACgBC,IAAD,IAAUC,QAAQC,KAAR,CAAcF,KAAKG,KAAnB,CADzB;AAED,CAtBD;;MAwBKC,e;AACHP,Y;AACAf,S;AACAC,U;AACAE,S;AACAE,W;;;AAGa,SAASrB,YAAT,CAAsBW,WAAtB,EAAoD4B,QAApD,EAAsE;AAAA,UAAhD5B,WAAgD,EAAnC2B,eAAmC;;AAAA,UAAlBC,QAAkB;;AACnF,OAAKA,QAAL,GAAgBA,QAAhB;AACA,OAAKC,MAAL,GAAc9B,cAAcC,WAAd,CAAd;AACD","file":"index.js","sourcesContent":["/* eslint camelcase: \"off\" */\nimport markdownFormatter from 'nightingale-markdown-formatter/src';\nimport rawFormatter from 'nightingale-raw-formatter/src';\nimport { post } from 'request';\nimport levels from 'nightingale-levels';\n\nconst levelToSlackColor = {\n  [levels.TRACE]: '#808080',\n  [levels.DEBUG]: '#808080',\n  [levels.INFO]: '#808080',\n  [levels.WARN]: 'warning',\n  [levels.ERROR]: 'danger',\n  [levels.CRITICAL]: 'danger',\n  [levels.FATAL]: 'danger',\n  [levels.EMERGENCY]: 'danger',\n};\n\nconst createHandler = (slackConfig) => record => {\n  const markdown = markdownFormatter(record);\n  const raw = rawFormatter(record);\n\n  const body = {\n    channel: slackConfig.channel,\n    username: slackConfig.username,\n    icon_url: slackConfig.iconUrl,\n    icon_emoji: slackConfig.iconEmoji,\n    attachments: [\n      {\n        fallback: raw,\n        title: record.message,\n        color: levelToSlackColor[record.level],\n        text: markdown,\n        mrkdwn_in: ['text'],\n      },\n    ],\n  };\n\n  post({ url: slackConfig.webhookUrl, body: body, json: true })\n    .on('error', (err2) => console.error(err2.stack));\n};\n\ntype SlackConfigType = {\n  webhookUrl: string,\n  channel: ?string,\n  username: ?string,\n  iconUrl: ?string,\n  iconEmoji: ?string,\n};\n\nexport default function SlackHandler(slackConfig: SlackConfigType, minLevel: number) {\n  this.minLevel = minLevel;\n  this.handle = createHandler(slackConfig);\n}\n"]}